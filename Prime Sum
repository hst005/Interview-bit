//Given an even number ( greater than 2 ), return two prime numbers whose sum will be equal to given number.

void sieve(int n,bool *prime){
    prime[0]=false;
    prime[1]=false;
    for(int i=2;i<=n;i++){
        prime[i]=true;
    }
    for(int i=2;i*i<=n;i++){
        if(prime[i]==true){
            for(int j=i*i;j<=n;j+=i){
                prime[j]=false;
            }
        }
    }
}

vector<int> Solution::primesum(int n) {
    vector <int> ans(2);
    bool *prime=new bool[n+1];
    sieve(n,prime);
    for(int i=0;i<n/2;i++){
        if(prime[i] && prime[n-i]){
            //if(i>n-i){
               // ans.push_back(i);
                //ans.push_back(n-i);
            //}
           /* else{
                ans.push_back(n-i);
                ans.push_back(i);
            }*/
            ans[0]=i;
            ans[1]=n-i;
            return ans;
        }
    }
}
